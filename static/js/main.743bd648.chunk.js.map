{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/SearchPanel/SearchPanel.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","SearchPanel","state","query","handleInput","queryString","saveFunc","inputData","setState","moviesFilter","filmFiltration","toLowerCase","includes","films","filter","this","props","saveSearch","htmlFor","type","id","placeholder","onChange","change","target","value","React","Component","App","visibleMovies","moviesFromServer","saveSearchResults","ReactDOM","render","document","getElementById"],"mappings":"8vEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBGK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAKEC,YAAc,SAACC,EAAaC,EAAUC,GACpC,EAAKC,SAAS,CACZL,MAAOE,IACN,kBAAMC,EAAS,EAAKG,aAAaF,QARxC,EAWEG,eAAiB,SAACZ,GAChB,IAAMX,EAAcW,EAAMX,YAAYwB,cAChCzB,EAAQY,EAAMZ,MAAMyB,cACpBR,EAAQ,EAAKD,MAAMC,MAAMQ,cAE/B,OAAQxB,EAAYyB,SAAST,IAC1BjB,EAAM0B,SAAST,IAjBtB,EAoBEM,aAAe,SAAAI,GAAK,OAAIA,EAAMC,OAAO,EAAKJ,iBApB5C,uDAsBY,IAAD,SAC2BK,KAAKC,MAA/BC,EADD,EACCA,WAAYV,EADb,EACaA,UAEpB,OACE,yBAAKjB,UAAU,SACb,2BAAO4B,QAAQ,eAAe5B,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACE6B,KAAK,OACLC,GAAG,eACH9B,UAAU,QACV+B,YAAY,mBACZC,SAAU,SAAAC,GAAM,OAAI,EACjBnB,YAAYmB,EAAOC,OAAOC,MAAOR,EAAYV,IAChDkB,MAAOV,KAAKb,MAAMC,cAvC9B,GAAiCuB,IAAMC,WCG1BC,EAAb,4MACE1B,MAAQ,CACN2B,cAAeC,GAFnB,EAKEC,kBAAoB,SAACnC,GACnB,EAAKY,SAAS,CACZqB,cAAejC,KAPrB,uDAWY,IACAiC,EAAkBd,KAAKb,MAAvB2B,cAER,OACE,yBAAKvC,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,CACEiB,UAAWuB,EACXb,WAAYF,KAAKgB,qBAIrB,kBAAC,EAAD,CACEnC,OAAQiC,KAGZ,yBAAKvC,UAAU,WAAf,0BA5BR,GAAyBqC,aCDzBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.743bd648.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SearchPanel extends React.Component {\n  state = {\n    query: '',\n  };\n\n  handleInput = (queryString, saveFunc, inputData) => {\n    this.setState({\n      query: queryString,\n    }, () => saveFunc(this.moviesFilter(inputData)));\n  };\n\n  filmFiltration = (movie) => {\n    const description = movie.description.toLowerCase();\n    const title = movie.title.toLowerCase();\n    const query = this.state.query.toLowerCase();\n\n    return (description.includes(query)\n    || title.includes(query));\n  }\n\n  moviesFilter = films => films.filter(this.filmFiltration);\n\n  render() {\n    const { saveSearch, inputData } = this.props;\n\n    return (\n      <div className=\"field\">\n        <label htmlFor=\"search-query\" className=\"label\">\n          Search movie\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"search-query\"\n            className=\"input\"\n            placeholder=\"Type search word\"\n            onChange={change => this\n              .handleInput(change.target.value, saveSearch, inputData)}\n            value={this.state.query}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchPanel.propTypes = {\n  saveSearch: PropTypes.func.isRequired,\n  inputData: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport { SearchPanel } from './components/SearchPanel/SearchPanel';\n\nexport class App extends Component {\n  state = {\n    visibleMovies: moviesFromServer,\n  }\n\n  saveSearchResults = (movies) => {\n    this.setState({\n      visibleMovies: movies,\n    });\n  }\n\n  render() {\n    const { visibleMovies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <div className=\"box\">\n            <SearchPanel\n              inputData={moviesFromServer}\n              saveSearch={this.saveSearchResults}\n            />\n          </div>\n\n          <MoviesList\n            movies={visibleMovies}\n          />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}